#!/usr/bin/env bash
set -e
arg="$1"

ip_api="https://api.ipify.org?format=text"

function vpn::test {
  echo TEST VPN proton1
  vpn_ip="$(curl --interface proton1 "$ip_api")"
  echo VPN IP: $vpn_ip
  echo TEST DEFAULT
  machine_ip="$(curl "$ip_api")"
  echo MACHINE IP: $machine_ip
  if test "$vpn_ip" == "$machine_ip"; then
    echo ERROR - IPS IDENTICAL
    exit 10
  fi
  echo PASSED!
}

function vpn::start {
  exec 5>&1 # https://stackoverflow.com/a/12451419/1333004
  echo START VPN "proton1"
  echo INIT IPsec/IKEv2 CONNECTION
  output="$(swanctl --initiate --child "proton1" 2>&1 | tee >(cat - >&5))"
  vip="$(echo "$output" | grep -Poh '(?<=^\[IKE\] installing new virtual IP ).*$')"
  echo VIRTUAL IP: "$vip"
  ip link set proton1 up
  echo DONE!
}

function vpn::stop {
  echo TERMINATING IPsec/IKEv2 CONNECTION
  swanctl --terminate --ike proton1
  echo DELETING XFRM DEVICE
  echo DONE!
}

function vpn::get-virtual-ip {
  echo -n "$(ip -o -4 addr show proton1 | grep -Poh '(?<=inet )[\d.]*' | sed -e 's/\s//g')"
}

case "$arg" in
  start)
    vpn::start
    vpn::test
    ;;
  stop)
    vpn::stop
    ;;
  test)
    vpn::test
    ;;
  get-virtual-ip)
    vpn::get-virtual-ip
    ;;
  *)
    echo UNKNOWN COMMAND "$arg"
    exit 10
    ;;
esac

